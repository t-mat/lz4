# Maintenance Schedule:
# - GitHub Actions : "Ubuntu 16.04 LTS will be removed on September 20, 2021"
#   https://github.blog/changelog/2021-04-29-github-actions-ubuntu-16-04-lts-virtual-environment-will-be-removed-on-september-20-2021/
#   This CI script will remove ubuntu-16.04.
#   It also removes test for the following compilers:
#   - gcc : 4.4, 4.5, 4.6, 4.7
#   - clang: 3.5, 3.6, 3.7, 3.8
#
# Known issues:
# - For now, this CI script ignores exit code of `make usan`.  Because
#   there're several issues which may take relatively long time to
#   resolve.  We'll fully enable it when we ensure `make usan` is ready
#   for all commits and PRs.
#   See https://github.com/lz4/lz4/pull/983 for details.  Also you can
#   investigate its raw log in "Linux x64 usan" at the GitHub Actions.
#
# - This test script ignores exit code of cppcheck which can see under
#   Job:Linux x64 scan-build + cppcheck in the GitHub Actions report.
#   Because this project doesn't 100% follow their recommendation.
#   Also sometimes it reports false positives.
#
# Notes:
# - You can investigate various information at the right pane of GitHub
#   Actions report page.
#
#   | Item                      | Section in the right pane             |
#   | ------------------------- | ------------------------------------- |
#   | OS, VM                    | Set up job                            |
#   | git repo, commit hash     | Run actions/checkout@v2               |
#   | gcc, tools                | Environment info                      |
#
# - To fail earlier, order of tests in the same job are roughly sorted by
#   elapsed time.
#
# Tests which we still leave at travis-ci
# - name: (Trusty) gcc-4.4 compilation
# - name: (Xenial) gcc-5 compilation
# - name: (Trusty) clang-3.8 compilation
# - name: Compile OSS-Fuzz targets
# - name: tag build
# - name: aarch64 real-hw tests
# - name: PPC64LE real-hw tests
# - name: IBM s390x real-hw tests


# Name of the workflow is also displayed as a SVG badge
name: lz4 CI

on: [push, pull_request]

jobs:
  # CI Environment information
  #
  # - "ubuntu-latest" (Ubuntu 20.04) has the following software
  #   https://github.com/actions/virtual-environments/blob/main/images/linux/Ubuntu2004-README.md
  basic-env-info:
    name: Linux Virtual Env Info (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [
          ubuntu-latest,
          ubuntu-20.04,   # https://github.com/actions/virtual-environments/blob/main/images/linux/Ubuntu2004-README.md
          ubuntu-18.04,   # https://github.com/actions/virtual-environments/blob/main/images/linux/Ubuntu1804-README.md
          ubuntu-16.04,   # https://github.com/actions/virtual-environments/blob/main/images/linux/Ubuntu1604-README.md
        ]
    steps:
    - uses: actions/checkout@v2

    - name: cc --version
      run: echo && cc --version

    - name: gcc --version
      run: echo && gcc --version

    - name: clang --version
      run: echo && clang --version

    - name: make -v
      run: echo && make -v

    - name: gcc packages (apt-cache)
      run: apt-cache search gcc | grep "^gcc-[0-9\.]* " | sort

    - name: clang packages (apt-cache)
      run: apt-cache search clang | grep "^clang-[0-9\.]* " | sort

    - name: QEMU packages (apt-cache)
      run: apt-cache search qemu | grep "^qemu-system-.*QEMU full system" | sort

    - name: git --version
      run: echo && git --version

    - name: g++ --version
      run: echo && g++ --version


  # Test various C compilers
  #
  # Invoke the following commands for each C compiler
  #   make all c_standards
  #   make -C programs
  #   make -C tests
  #
  ubuntu-c-compilers:
    name: ${{ matrix.xcc_name }}, ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false  # 'false' means Don't stop matrix workflows even if some matrix failed.
      matrix:
        include: [
          # xcc_name : label name.  string.
          # xcc_pkg  : apt-get package name.
          # xcc      : C compiler executable.
          # os       : GitHub Actions YAML workflow label.  See https://github.com/actions/virtual-environments#available-environments

          # Default C compilers
          #  We use 'ubuntu-latest' for default C compilers.
          { xcc_name: 'cc',         xcc_pkg: '',        xcc: cc,        os: ubuntu-latest, },
          { xcc_name: 'gcc',        xcc_pkg: '',        xcc: gcc,       os: ubuntu-latest, },
          { xcc_name: 'clang',      xcc_pkg: '',        xcc: clang,     os: ubuntu-latest, },


          # gcc
          { xcc_name: 'gcc 11',     xcc_pkg: gcc-11,    xcc: gcc-11,    os: ubuntu-20.04,  },
          { xcc_name: 'gcc 10',     xcc_pkg: gcc-10,    xcc: gcc-10,    os: ubuntu-20.04,  },
          { xcc_name: 'gcc 9',      xcc_pkg: gcc-9,     xcc: gcc-9,     os: ubuntu-20.04,  },
          { xcc_name: 'gcc 8',      xcc_pkg: gcc-8,     xcc: gcc-8,     os: ubuntu-20.04,  },
          { xcc_name: 'gcc 7',      xcc_pkg: gcc-7,     xcc: gcc-7,     os: ubuntu-20.04,  },

          # gcc, ubuntu-18.04
          { xcc_name: 'gcc 6',      xcc_pkg: gcc-6,     xcc: gcc-6,     os: ubuntu-18.04,  },
          { xcc_name: 'gcc 5',      xcc_pkg: gcc-5,     xcc: gcc-5,     os: ubuntu-18.04,  },
          { xcc_name: 'gcc 4.8',    xcc_pkg: gcc-4.8,   xcc: gcc-4.8,   os: ubuntu-18.04,  },

          # gcc, ubuntu-16.04 will be removed.  See "Maintenance Schedule" at the top of this file.
          { xcc_name: 'gcc 4.7',    xcc_pkg: gcc-4.7,   xcc: gcc-4.7,   os: ubuntu-16.04,  },
          { xcc_name: 'gcc 4.6',    xcc_pkg: gcc-4.6,   xcc: gcc-4.6,   os: ubuntu-16.04,  },
          { xcc_name: 'gcc 4.5',    xcc_pkg: gcc-4.5,   xcc: gcc-4.5,   os: ubuntu-16.04,  },
          { xcc_name: 'gcc 4.4',    xcc_pkg: gcc-4.4,   xcc: gcc-4.4,   os: ubuntu-16.04,  },


          # clang
          { xcc_name: 'clang 12',   xcc_pkg: clang-12,  xcc: clang-12,  os: ubuntu-20.04,  },
          { xcc_name: 'clang 11',   xcc_pkg: clang-11,  xcc: clang-11,  os: ubuntu-20.04,  },
          { xcc_name: 'clang 10',   xcc_pkg: clang-10,  xcc: clang-10,  os: ubuntu-20.04,  },
          { xcc_name: 'clang 9',    xcc_pkg: clang-9,   xcc: clang-9,   os: ubuntu-20.04,  },
          { xcc_name: 'clang 8',    xcc_pkg: clang-8,   xcc: clang-8,   os: ubuntu-20.04,  },
          { xcc_name: 'clang 7',    xcc_pkg: clang-7,   xcc: clang-7,   os: ubuntu-20.04,  },
          { xcc_name: 'clang 6',    xcc_pkg: clang-6.0, xcc: clang-6.0, os: ubuntu-20.04,  },

          # clang, ubuntu-18.04
          { xcc_name: 'clang 5',    xcc_pkg: clang-5.0, xcc: clang-5.0, os: ubuntu-18.04,  },
          { xcc_name: 'clang 4',    xcc_pkg: clang-4.0, xcc: clang-4.0, os: ubuntu-18.04,  },
          { xcc_name: 'clang 3.9',  xcc_pkg: clang-3.9, xcc: clang-3.9, os: ubuntu-18.04,  },

          # clang, ubuntu-16.04 will be removed.  See "Maintenance Schedule" at the top of this file.
          { xcc_name: 'clang 3.8',  xcc_pkg: clang-3.8, xcc: clang-3.8, os: ubuntu-16.04,  },
          { xcc_name: 'clang 3.7',  xcc_pkg: clang-3.7, xcc: clang-3.7, os: ubuntu-16.04,  },
          { xcc_name: 'clang 3.6',  xcc_pkg: clang-3.6, xcc: clang-3.6, os: ubuntu-16.04,  },
          { xcc_name: 'clang 3.5',  xcc_pkg: clang-3.5, xcc: clang-3.5, os: ubuntu-16.04,  },
        ]
    env:                        # Set environment variables
      XCC: ${{ matrix.xcc }}
    steps:
    - uses: actions/checkout@v2 # https://github.com/actions/checkout
    - name: apt-get install
      run: |
        sudo apt-get install gcc-multilib ${{ matrix.xcc_pkg }} 

    - name: Environment info
      run: |
        echo && which $XCC
        echo && $XCC --version
